<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"   
    xsi:schemaLocation="  
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context-3.0.xsd    
http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx   
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop   
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd 
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">  

	<context:component-scan base-package="com.chlitina.o2o.service"/> 
  
	<import resource="classpath:/META-INF/cxf/cxf.xml"/>
	<import resource="classpath:/META-INF/cxf/cxf-extension-soap.xml"/>
	<import resource="classpath:/META-INF/cxf/cxf-servlet.xml"/>

    <bean id="service1" class="ws.impl.HelloWorldImpl"></bean>  
  
    <jaxws:endpoint id="hello" implementor="#service1" address="/HelloWorldService" />  
 
	<bean id="userServiceBean" class="com.hoo.service.ComplexUserService"/>
	 
	<bean id="inMessageInterceptor" class="com.hoo.interceptor.MessageInterceptor">
	    <constructor-arg  value="receive"/>
	</bean>
	 
	<bean id="outLoggingInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
	<!-- 注意下面的address，这里的address的名称就是访问的WebService的name -->
	<jaxws:server id="userService" serviceClass="com.hoo.service.IComplexUserService" address="/Users">
	    <jaxws:serviceBean>
	        <!-- 要暴露的 bean 的引用 -->
	        <ref bean="userServiceBean"/>
	    </jaxws:serviceBean>
	    <jaxws:inInterceptors>
	        <ref bean="inMessageInterceptor"/>
	    </jaxws:inInterceptors>
	    <jaxws:outInterceptors>
	        <ref bean="outLoggingInterceptor"/>
	    </jaxws:outInterceptors>
	</jaxws:server> 
  
  
  <!-- 使用apache的DBCP连接池  -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <!-- Connection Info -->  
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@192.168.80.128:1521:ocp" />  
        <property name="username" value="shenyang" />  
        <property name="password" value="shenyang" />  
  
        <!-- Connection Pooling DBCP -->  
        <property name="initialSize" value="5" />  
        <property name="maxActive" value="100" />  
        <property name="maxIdle" value="30" />  
        <property name="maxWait" value="1000" />  
        <property name="poolPreparedStatements" value="true" />  
        <property name="defaultAutoCommit" value="false" />  
    </bean>  
  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="localtion" value="classpath:service.properties"/>
    </bean>
    
    <!-- 这里的dataSource要与sqlSessionFactory的dataSource一致，否则事务无效 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:mybatis-configuration.xml"></property>  
    </bean>  
  
    <!-- 注意！这里不要偷懒！。要把userMapper赋给别的.class文件里的一个属性后再使用，否则事务无效。  
    也就是说当直接创建userMapper的一个class，然后使用IUserDao.insertUser方法的话也可以实现，但是事务将无效。 -->  
    <!-- 这里的mapperInterface需要接口类型 -->  
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
        <property name="mapperInterface" value="com.dao.IUserDao" />  
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>  
      
    <!-- 扫描包 -->  
    <context:component-scan base-package="com.service" />   
  
    <!-- 使用注解方式的事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
</beans>  